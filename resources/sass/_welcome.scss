* {
    margin: 0;
    border: 0;
    padding: 0;
    text-align: center;
    color: #ddd;
}

$breakpoints: (
    "sm": "screen and (max-width: 530px)",
    "md": "screen and (max-width: 740px)",
    "lg": "screen and (min-width: 1350px)",
) !default;

@mixin mq($breakpoint: md) {
    @media #{map-get($breakpoints, $breakpoint)} {
        @content;
    }
}

body {
    height: 100%;
    background-color: $black;
    font-family: $font-family-text;
    z-index: -50;
    a {
        text-decoration: none;
    }
}

.content {
    .title {
        padding-top: 5vh;
        font-family: $font-family-title;
        span {
            display: inherit;
            font-family: $font-family-title;
        }
    }
    .login a {
        display: block;
        padding: 2vw 2vw;
        margin: 0 auto;
        margin-top: 4vw;
        background-color: #444;
        color: #ddd;
        border-radius: 10px;
        width: 56px;
        height: 28px;
        &:hover {
            background-color: #ddd;
            color: #444;
            text-decoration: none;
        }
    }

    .content-text {
        margin-top: 2em;
        h2 {
            margin-top: 2em;
        }
        a{
            p{
                &:hover{
                    text-decoration: underline;
                }
            }
        }
        p {
            margin-top: 1em;
            .content-text-none {
                @include mq(sm) {
                    display: none;
                }
            }
        }
        .rule{
            font-size: 0.5em;
            display: flex;
            justify-content: center;
        }
    }
}

// top装飾
canvas.background {
    position: absolute;
    display: block;
    top: 0;
    right: 0;
    z-index: -3;
    background-color: rgb(8, 8, 8);
    background-image: url(imgs/skeleton.jpg);
    background-position: right center;
    background-repeat: no-repeat;
    background-size: 50%;
}

.particles {
    width: 50vw;
}

#face {
    position: absolute;
    top: 58%;
    left: 75%;

    .tear {
        @include mq(md) {
            display: none;
        }
        position: absolute;
        width: 48vw;
        height: 20vh;
        transform: translate(-50%, -50%);
        filter: blur(8px) contrast(30);

        &_right {
            .drops {
                position: absolute;
                top: 50%;
                left: 50%;
                margin-left: 4%;

                .drop {
                    width: 2vw;
                    height: 2vw;
                    background: rgb(128, 5, 5);
                    border-radius: 100%;
                }
            }
            @for $i from 1 through 100 {
                &:nth-child(#{$i}) {
                    .drops {
                        $speed: #{random(5000) + 3000}ms;
                        animation: horizontalRight $speed cubic-bezier(0.545, 0.08, 0.52, 0.975) infinite;

                        .drop {
                            animation: vertical $speed cubic-bezier(0.545, 0.08, 0.52, 0.975) infinite;
                        }
                    }
                }
            }
        }
    }
}

@keyframes horizontalRight {
    0% {
        transform: translateX(0px);
    }
    25% {
        transform: translateX(85px);
    }
    50% {
        transform: translateX(60px);
    }
    100% {
        transform: translateX(-100px);
    }
}
@keyframes horizontalLeft {
    0% {
        transform: translateX(0px);
    }
    25% {
        transform: translateX(-85px);
    }
    50% {
        transform: translateX(-60px);
    }
    100% {
        transform: translateX(100px);
    }
}
@keyframes vertical {
    0% {
        transform: translateY(0px) scale(0.5);
    }
    18% {
        transform: translateY(8px) scale(1.1);
    }
    35% {
        transform: translateY(-10px) scale(1);
    }
    100% {
        transform: translateY(240px) scale(0);
    }
}


